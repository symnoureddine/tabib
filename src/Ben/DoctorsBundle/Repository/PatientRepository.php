<?php

namespace Ben\DoctorsBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * PatientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PatientRepository extends EntityRepository
{


	/* advanced search */
    public function search($searchParam) {
        extract($searchParam);        

        $qb = $this->createQueryBuilder('p');

        if(!empty($keyword))
            $qb->andWhere('concat(p.nom, p.prenom) like :keyword or p.email like :keyword  or p.cin like :keyword')
                ->setParameter('keyword', '%'.$keyword.'%');
        if(!empty($ids))
            $qb->andWhere('p.id in (:ids)')->setParameter('ids', $ids);
        if(!empty($cin))
            $qb->andWhere('p.cin = :cin')->setParameter('cin', $cin);
        if(!empty($city))
            $qb->andWhere('p.city = :city')->setParameter('city', $city);
        if(!empty($sexe))
            $qb->andWhere('p.sexe = :sexe')->setParameter('sexe', $sexe);
        if(!empty($date_from))
            $qb->andWhere('p.dateNaissance > :date_from')->setParameter('date_from', $date_from);
        if(!empty($date_to))
            $qb->andWhere('p.dateNaissance < :date_to')->setParameter('date_to', $date_to);
        if(!empty($sortBy)){
            $sortBy = in_array($sortBy, array('prenom', 'nom', 'dateNaissance')) ? $sortBy : 'id';
            $sortDir = ($sortDir == 'DESC') ? 'DESC' : 'ASC';
            $qb->orderBy('p.' . $sortBy, $sortDir);
        }

        if(!empty($perPage)) $qb->setFirstResult(($page - 1) * $perPage)->setMaxResults($perPage);

       return new Paginator($qb->getQuery());
    }

	public function counter() {
        $qb = $this->createQueryBuilder('p')->select('COUNT(p)');
        return $qb->getQuery()->getSingleScalarResult();
    }




}
